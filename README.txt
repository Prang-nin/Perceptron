Perceptron Classification
	: Perceptron is a model of single-neuron which has a computation function 
that learning by adjusting the weights vectors corresponding to incorrect prediction.

Required modules
- Pandas 1.3.4
- Numpy 1.21.4
- Python 3.9.0

Program functions
1. dropClass
	: Take array as input, drop the unwanted class label and return an array as the output.

2. getFeature 
	: Slice the dataset and return all columns except the last column (label column) 

3. getLabel
	: Slice the dataset and return a label column

4. mapBinaryClass
	: Take array that has binary-labeled, map the label with 1 for the positive class 
	and -1 for negative class, corresponding to the classList [positive, negative].

5. activationFunction
	: Return 1 for the activation score that is more than the threshold(0), otherwise return -1.

6. perceptronTrain
	: Take the labeled dataset and initialize the weight array with 0. The activation score for each instance 
	is computed, and the weights vector will adjust when misclassification happened.

7. perceptronTest
	: Take trained weights and features from the test dataset and then calculate the activation score. 
	The calculated score is passed into activation function and return label prediction.

8. mapMultiClass
	: Take array that has multiple-label and map into the numerical label (0,1,2,3..) corresponding to the classList.

9. multiClassTrain
	: Generate the weights vector using the perceptronTrain function of each sub-model (each class label Vs the rest) 
	and return as a stacked vector of all weights vectors.

10. multiClassifier
	: Take the stack of weights vectors. For each instance, the activation scores of each weights vectors are calculated
	and return the label prediction that has the highest score (assuming that it has higher confidence)

11. confusionMatrix
	: Take actual label and predicted label and return a confusion matrix

12. evaluationReport
	: The report consists of accuracy, precision, recall, F-score, and Macro F-score.

How to use the program
1. For Binary classification
	1) Drop unwanted label using dropClass function
	2) Convert string label into the numerical label using mapBinaryClass function
	3) Features array and label array can be generated by using getFeature function and getLabel function respectively.
	4) Train the weights vector using perceptronTrain function
	5) Get the prediction label using perceptronTest function
	6) Generate the evaluation report using evaluationReport function

2. For Multi-class classification using the One-vs-Rest approach
	1) Convert string label into the numerical label using mapMultiClass function
	2) Features array and label array can be generated by using getFeature function and getLabel function respectively.
	3) Train the weights vector using multiClassTrain function, the lambda parameter can be adjusted (default = 0)
	4) Get the prediction label using multiClassifier function
	5) Generate the evaluation report using evaluationReport function